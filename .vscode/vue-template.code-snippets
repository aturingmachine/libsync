{
	// Place your library-sync workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  "Scaffold Vue Component": {
    "scope": "vue",
    "prefix": "scaffold",
    "body": [
      "<template>",
      "\t<div class=\"${TM_FILENAME_BASE/([A-Z]{2,})(?=[A-Z][a-z]+[0-9]*|$)|([A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+)([- _])?/${1:/downcase}${2:/downcase}${2:+-}/gm}wrapper\">",
      "\t\t<h1>${TM_FILENAME/(.*)\\..+$/$1/}</h1>",
      "\t\tPlaceholder",
      "\t</div>",
      "</template>\n",
      "<script lang=\"ts\">",
      "import Vue from 'vue'\n",
      "export default Vue.extend({",
      "\tname: '${TM_FILENAME_BASE}',\n",
      "\tdata: () => {\n\t\treturn {}\n\t},",
      "})",
      "</script>\n",
      "<style lang=\"scss\" scoped>",
      ".${TM_FILENAME_BASE/([A-Z]{2,})(?=[A-Z][a-z]+[0-9]*|$)|([A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+)([- _])?/${1:/downcase}${2:/downcase}${2:+-}/gm}wrapper {",
      "\tdisplay: flex;",
      "}",
      "</style>\n"
    ]
  }
}